{"version":3,"sources":["context.js","assets/doge.png","components/Logo/index.js","components/Navigation/Toolbar/index.js","components/Button/index.js","components/Currency/index.js","assets/bitcoin.png","assets/ethereum.png","assets/litecoin.png","container/Wallet/index.js","hoc/Layout/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","Logo","className","src","doge","alt","width","height","Toolbar","walletCash","toFixed","Button","curShortName","onClickHandler","btnTitle","title","onClick","Currency","curName","imgSrc","coins","curValue","coinValue","updateWallet","useContext","getCoinsForecast","setCurencyState","a","axios","get","then","resp","data","rates","catch","err","console","error","Wallet","wallet","useState","curencyState","useEffect","dogeCoin","DOGE","bitcoin","btcCoin","BTC","ethereum","ethCoin","ETH","litecoin","ltcCoin","LTC","getWalletData","setWalletState","saveWalletData","walletState","post","log","Layout","prevWalletRef","useRef","undefined","current","Provider","value","cash","cointType","updateCoins","coinType","getUpdateObject","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6f1019e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Context = React.createContext();","export default __webpack_public_path__ + \"static/media/doge.f89c8be8.png\";","import React from 'react';\r\n\r\nimport './style.css';\r\nimport doge from '../../assets/doge.png';\r\n\r\nconst Logo = () => (\r\n    <>\r\n        <div className=\"logo\">\r\n            <img src={doge} alt=\"doge\" width=\"46\" height=\"46\"></img>\r\n        </div>\r\n        <span className=\"logoTitle\">CoinDog</span>\r\n    </>\r\n\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nimport Logo from '../../Logo';\r\n\r\nconst Toolbar = ({ walletCash }) => (\r\n    <header>\r\n        <div className=\"logo-container\">\r\n            <Logo />\r\n        </div>\r\n        <div className=\"cash\"><span>$</span>{walletCash.toFixed(2)}</div>\r\n    </header>\r\n);\r\n\r\nexport default Toolbar;","import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nconst Button = ({ curShortName, onClickHandler }) => {\r\n    const btnTitle = `Buy 1 ${curShortName}`;\r\n\r\n    return (\r\n        <div className=\"btn-container\">\r\n            <button className=\"fab_btn\" title={btnTitle} onClick={onClickHandler}>+</button>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Button;","import React, { useContext } from 'react';\r\nimport { Context } from '../../context';\r\n\r\nimport Button from '../Button';\r\nimport './style.css';\r\n\r\nconst Currency = ({ curName, curShortName, imgSrc, coins, curValue }) => {\r\n    const coinValue = (coins * curValue).toFixed(2);\r\n    const { updateWallet } = useContext(Context);\r\n\r\n    return (\r\n        <div className=\"currency\">\r\n            <div className=\"currency-header\">\r\n                <img src={imgSrc} alt={curShortName} width=\"32\" height=\"32\"></img>\r\n                <div className=\"currency-name\">{curName}</div>\r\n            </div>\r\n            <div>\r\n                <span className=\"currency-value\">{coins}</span>\r\n                <span>{curShortName}</span>\r\n            </div>\r\n            <div>\r\n                <span>$</span>\r\n                <span className=\"currency-in-usd\">{coinValue}</span>\r\n                <span>USD</span>\r\n            </div>\r\n            <Button curShortName={curShortName} onClickHandler={() => updateWallet(curValue, curShortName)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Currency;","export default __webpack_public_path__ + \"static/media/bitcoin.d1874dde.png\";","export default __webpack_public_path__ + \"static/media/ethereum.119e0285.png\";","export default __webpack_public_path__ + \"static/media/litecoin.1982965d.png\";","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport Currency from '../../components/Currency';\r\n\r\nimport doge from '../../assets/doge.png';\r\nimport bitcoin from '../../assets/bitcoin.png';\r\nimport ethereum from '../../assets/ethereum.png';\r\nimport litecoin from '../../assets/litecoin.png';\r\n\r\nimport './style.css';\r\n\r\nconst getCoinsForecast = async setCurencyState => {\r\n    await axios.get('http://api.coinlayer.com/api/live?access_key=6bd51985e32095f0e1b468f2955d2395&symbols=DOGE,BTC,ETH,LTC')\r\n        .then(resp => {\r\n            setCurencyState(resp.data.rates);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });;\r\n}\r\n\r\nconst Wallet = ({ wallet }) => {\r\n    const [curencyState, setCurencyState] = useState();\r\n\r\n    useEffect(() => {\r\n        getCoinsForecast(setCurencyState);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"wallet\">\r\n                <Currency curName=\"Dogecoin\" curShortName=\"DOGE\" imgSrc={doge} coins={wallet?.dogeCoin || 0} curValue={curencyState?.DOGE || 0} />\r\n                <Currency curName=\"Bitcoin\" curShortName=\"BTC\" imgSrc={bitcoin} coins={wallet?.btcCoin || 0} curValue={curencyState?.BTC || 0} />\r\n                <Currency curName=\"Ethereum\" curShortName=\"ETH\" imgSrc={ethereum} coins={wallet?.ethCoin || 0} curValue={curencyState?.ETH || 0} />\r\n                <Currency curName=\"Litecoin\" curShortName=\"LTC\" imgSrc={litecoin} coins={wallet?.ltcCoin || 0} curValue={curencyState?.LTC || 0} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Wallet;","import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios'\r\nimport { Context } from '../../context';\r\n\r\nimport Toolbar from '../../components/Navigation/Toolbar';\r\nimport Wallet from '../../container/Wallet';\r\n\r\nconst getWalletData = async setWalletState => {\r\n    await axios.get('/wallet')\r\n        .then(resp => {\r\n            setWalletState(resp.data);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n};\r\n\r\nconst saveWalletData = async walletState => {\r\n    await axios.post('/wallet', walletState)\r\n        .then(resp => {\r\n           console.log(resp);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n        });\r\n};\r\n\r\nconst getUpdateObject = (walletState, coinType) => {\r\n    switch (coinType) {\r\n        case 'DOGE':\r\n            return {\r\n                ...walletState,\r\n                dogeCoin: walletState.dogeCoin + 1\r\n            }\r\n        case 'BTC':\r\n            return {\r\n                ...walletState,\r\n                btcCoin: walletState.btcCoin + 1,\r\n            }\r\n        case 'ETH':\r\n            return {\r\n                ...walletState,\r\n                ethCoin: walletState.ethCoin + 1\r\n            }\r\n        case 'LTC':\r\n            return {\r\n                ...walletState,\r\n                ltcCoin: walletState.ltcCoin + 1\r\n            }\r\n        default:\r\n            return {\r\n                ...walletState\r\n            }\r\n    }\r\n}\r\n\r\nconst Layout = () => {\r\n    const [walletState, setWalletState] = useState();\r\n    const prevWalletRef = useRef();\r\n\r\n    useEffect(() => {\r\n        getWalletData(setWalletState);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (prevWalletRef.current !== undefined && prevWalletRef.current !== walletState) {\r\n            saveWalletData(walletState);\r\n        }\r\n    }, [walletState]);\r\n\r\n    useEffect(() => {\r\n        prevWalletRef.current = walletState;\r\n    });\r\n\r\n    const updateWallet = (cash, cointType) => {\r\n        if (walletState.cash - cash < 0) {\r\n            console.error(`You don't have money!`);\r\n        } else {\r\n            const updateCoins = getUpdateObject(walletState, cointType);\r\n\r\n            setWalletState({\r\n                ...updateCoins,\r\n                cash: walletState.cash - cash,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{ updateWallet }}>\r\n            <Toolbar walletCash={walletState?.cash || 0} />\r\n            <Wallet wallet={walletState} />\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default Layout;","import Layout from './hoc/Layout/Layout';\n\nconst App = () => (\n  <Layout />\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}